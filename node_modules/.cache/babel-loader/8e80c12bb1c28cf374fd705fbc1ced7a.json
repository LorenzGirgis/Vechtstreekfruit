{"ast":null,"code":"var _jsxFileName = \"/Users/jaynekolsteeg/Documents/Deep Dive - Fruit/quiz-app/src/context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useContext, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst table = {\n  sports: 21,\n  history: 23,\n  politics: 24,\n  science: 18\n}; // const API_ENDPOINT = \"https://opentdb.com/api.php?\";\n\nconst AppContext = /*#__PURE__*/createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [waiting, setWaiting] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [error, setError] = useState(false);\n  const [index, setIndex] = useState(0);\n  const [correct, setCorrect] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  const [quiz, setQuiz] = useState({\n    amount: 10,\n    category: \"sports\",\n    difficulty: \"easy\",\n    type: \"boolean\"\n  });\n\n  const fetchApi = async url => {\n    setWaiting(false);\n    setLoading(true);\n\n    try {\n      const response = await axios.get(url);\n\n      if (response) {\n        const data = response.data.results;\n\n        if (data.length > 0) {\n          setQuestions(data);\n          setLoading(false);\n          setWaiting(false);\n          setError(false);\n        } else {\n          setWaiting(true);\n          setError(true);\n        }\n      } else {\n        setWaiting(true);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const nextQuestion = () => {\n    setIndex(prevIndex => {\n      if (prevIndex === questions.length - 1) {\n        openModal();\n        return questions.length - 1;\n      } else {\n        return prevIndex + 1;\n      }\n    });\n  };\n\n  const checkAnswer = value => {\n    if (value) {\n      setCorrect(prev => prev + 1);\n    }\n\n    nextQuestion();\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setIndex(0);\n    setCorrect(0);\n    setWaiting(true);\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setQuiz({ ...quiz,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      amount,\n      category,\n      difficulty,\n      type\n    } = quiz;\n    let url = `${API_ENDPOINT}amount=${amount}&category=${table[category]}&difficulty=${difficulty}&type=${type}`;\n    fetchApi(url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      waiting,\n      loading,\n      index,\n      questions,\n      error,\n      correct,\n      nextQuestion,\n      checkAnswer,\n      isModalOpen,\n      closeModal,\n      quiz,\n      handleChange,\n      handleSubmit\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppProvider, \"Ug0KsBZ/WUdZNmC6t0o6ox1LVJc=\");\n\n_c = AppProvider;\nexport default AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/Users/jaynekolsteeg/Documents/Deep Dive - Fruit/quiz-app/src/context.js"],"names":["axios","useState","useContext","createContext","table","sports","history","politics","science","AppContext","AppProvider","children","waiting","setWaiting","loading","setLoading","isModalOpen","setIsModalOpen","error","setError","index","setIndex","correct","setCorrect","questions","setQuestions","quiz","setQuiz","amount","category","difficulty","type","fetchApi","url","response","get","data","results","length","console","nextQuestion","prevIndex","openModal","checkAnswer","value","prev","closeModal","handleChange","e","name","target","handleSubmit","preventDefault","API_ENDPOINT","useGlobalContext"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState, useContext, createContext } from \"react\";\n\nconst table = {\n  sports: 21,\n  history: 23,\n  politics: 24,\n  science: 18,\n};\n\n// const API_ENDPOINT = \"https://opentdb.com/api.php?\";\n\nconst AppContext = createContext();\n\nconst AppProvider = ({ children }) => {\n  const [waiting, setWaiting] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [error, setError] = useState(false);\n  const [index, setIndex] = useState(0);\n  const [correct, setCorrect] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  const [quiz, setQuiz] = useState({\n    amount: 10,\n    category: \"sports\",\n    difficulty: \"easy\",\n    type: \"boolean\",\n  });\n\n  const fetchApi = async (url) => {\n    setWaiting(false);\n    setLoading(true);\n    try {\n      const response = await axios.get(url);\n      if (response) {\n        const data = response.data.results;\n        if (data.length > 0) {\n          setQuestions(data);\n          setLoading(false);\n          setWaiting(false);\n          setError(false);\n        } else {\n          setWaiting(true);\n          setError(true);\n        }\n      } else {\n        setWaiting(true);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const nextQuestion = () => {\n    setIndex((prevIndex) => {\n      if (prevIndex === questions.length - 1) {\n        openModal();\n        return questions.length - 1;\n      } else {\n        return prevIndex + 1;\n      }\n    });\n  };\n\n  const checkAnswer = (value) => {\n    if (value) {\n      setCorrect((prev) => prev + 1);\n    }\n    nextQuestion();\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setIndex(0);\n    setCorrect(0);\n    setWaiting(true);\n  };\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n    setQuiz({ ...quiz, [name]: value });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { amount, category, difficulty, type } = quiz;\n    let url = `${API_ENDPOINT}amount=${amount}&category=${table[category]}&difficulty=${difficulty}&type=${type}`;\n    fetchApi(url);\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        waiting,\n        loading,\n        index,\n        questions,\n        error,\n        correct,\n        nextQuestion,\n        checkAnswer,\n        isModalOpen,\n        closeModal,\n        quiz,\n        handleChange,\n        handleSubmit,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppProvider;\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n"]},"metadata":{},"sourceType":"module"}